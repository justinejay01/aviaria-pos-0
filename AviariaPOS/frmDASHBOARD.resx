<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>